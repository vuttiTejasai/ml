

# importing all necessary libraries
import numpy as np
import random
from time import sleep

def create_board():
    return(np.array([[0, 0, 0],
                     [0, 0, 0],
                     [0, 0, 0]]))
def possibilities(board):
    l = []
    for i in range(len(board)):
        for j in range(len(board)):
            if board[i][j] == 0:
                l.append((i, j))
    return(l)
def random_place(board, player):
    selection = possibilities(board)
    current_loc = random.choice(selection)
    board[current_loc] = player
    return(board)
def row_win(board, player):
    for x in range(len(board)):
        win = True
        for y in range(len(board)):
            if board[x, y] != player:
                win = False
                break  
        if win:
            return win
    return False
def col_win(board, player):
    for x in range(len(board)):
        win = True
        for y in range(len(board)):
            if board[y][x] != player:
                win = False
                break  
        if win:
            return win
    return False
def diag_win(board, player):
    win = True
    for x in range(len(board)):
        if board[x, x] != player:
            win = False
            break
    if win:
        return True
    win = True
    for x in range(len(board)):
        if board[x, len(board) - 1 - x] != player:
            win = False
            break
    return win
def evaluate(board):
    winner = 0

    for player in [1, 2]:
        if (row_win(board, player) or
                col_win(board, player) or
                diag_win(board, player)):
            winner = player
            break   
    if np.all(board != 0) and winner == 0: 
        winner = -1
    return winner
def play_game():
    board, winner, counter = create_board(), 0, 1
    print(board)
    sleep(2)
    while winner == 0:
        for player in [1, 2]:
            board = random_place(board, player)
            print("Board after " + str(counter) + " move")
            print(board)
            sleep(2)
            counter += 1
            winner = evaluate(board)
            if winner != 0:
                break
    return(winner)
print("Winner is: " + str(play_game()))

output:
[[0 0 0]
 [0 0 0]
 [0 0 0]]
Board after 1 move
[[1 0 0]
 [0 0 0]
 [0 0 0]]
Board after 2 move
[[1 0 0]
 [0 0 0]
 [2 0 0]]
Board after 3 move
[[1 0 0]
 [0 0 0]
 [2 0 1]]
Board after 4 move
[[1 0 0]
 [0 0 2]
 [2 0 1]]
Board after 5 move
[[1 0 1]
 [0 0 2]
 [2 0 1]]
Board after 6 move
[[1 0 1]
 [0 2 2]
 [2 0 1]]
Board after 7 move
[[1 1 1]
 [0 2 2]
 [2 0 1]]
Winner is: 1
